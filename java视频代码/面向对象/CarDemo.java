/**
 * time:2019-05-06
 * author:Zhang Xiong
 * Java：万物皆对象
 * 有对象用对象，没对象造对象，维护对象之间的关系
 * 举例：大象装进冰箱
 * 面向对象：强调对象（实体），冰箱打开，冰箱存储，冰箱关闭 比如C++ Java C#
 * 面向过程：打开冰箱，存储大象，关上冰箱，强调的是过程（动作）比如C语言
 * 特点：
 * 1.面向对象是一种常见的思想，符合人们的思考习惯
 * 2.面向对象的出现，将复杂问题简单化
 * 3.面向对象的出现，让曾经在过程中的执行者变成了对象中的指挥者
 * 特征：封装、继承、多态
 * 用Java语言对现实生活中的事物进行描述
 * 通过类的形式来实现
 * 对事物的描述关注两个方面：属性，行为
 * 只要明确该事物属性、行为并定义在类中
 * 对象：实实在在存在的个体
 * 类与对象之间的关系
 * 类：事物的描述
 * 对象：该类事物的实例，在Java中通过new来创建
 */
public class CarDemo
{
    public static void main(String[] args)
    {
        //计算机中创建car的实例，通过new关键字
        Car c = new Car();//c就是一个类类型的引用变量，指向了该类的对象
        c.num = 4;//给对象赋值而不是给图纸赋值
        c.color = "red";
        c.run();//要使用对象中的内容可以通过 对象.成员的形式完成调用

        Car c1 = new Car();
        show(c1);

        /*
         * 匿名对象，没有名字的对象
         * new Car(); 其实就是定义对象的简写格式
         * new Car().run();  运行完就结束
         * 1.当对象对方法仅进行一次调用的时候，就可以简化成匿名对象。
         * 2.匿名对象可以作为实际参数进行传递
         */
    }

    //汽车改装厂 统一标准 所有Car经过这个工厂都是黑色，3个轮胎
    public static void show(Car c)//类类型变量一定指向对象，要不就是null
    {
        c.num = 3;
        c.color = "black";
        System.out.println(c.num+"..."+c.color);
    }
}
/*
 * 描述小汽车：
 * 分析：
 * 1.属性：轮胎数、颜色
 * 2.行为：运行
 *
 * 定义类其实就是定义类中的成员
 * 成员：成员变量<--->属性，成员函数<--->行为
 *
 * 成员变量和局部变量的区别
 * 1.成员变量定义在类中，整个类中都可以访问
 *   局部变量定义在函数语句局部代码块中，只在所属区域有效
 * 2.成员变量存在于堆内存的对象中，局部变量存在于栈内存的方法中
 * 3.成员变量随着对象的创建而存在，随着对象的小事而消失
 *   局部变量随着所属区域的执行而存在，随着所属区域的结束而释放
 * 4.成员变量都有默认初始化值，局部变量没有默认初始化值
 */
class Car
{
    int num;
    String color;

    void run()
    {
        System.out.println(num + "..." + color);
    }
}
